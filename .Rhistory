<div style="display: flex;">
library(shiny)
library(dplyr)
library(Matrix)
songs <- data.frame(
Popularity = c(83, 81, 80, 88, 86, 84, 84, 87, 86, 99),
Title = c("Hey, Soul Sister", "A Thousand Years", "Titanium (feat. Sia)", "Underneath the Tree", "All of Me", "Thinking out Loud", "The Hills", "Shape of You", "One Kiss (with Dua Lipa)", "Memories"),
Artist = c("Train", "Christina Perri", "David Guetta", "Kelly Clarkson", "John Legend", "Ed Sheeran", "The Weeknd", "Ed Sheeran", "Calvin Harris", "Maroon 5"),
Genre = c("neo mellow", "dance pop", "dance pop", "dance pop", "neo mellow", "pop", "canadian contemporary r&b", "pop", "dance pop", "pop"),
Year = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
BPM = c(97, 139, 126, 160, 120, 79, 113, 96, 124, 91),
Energy = c(89, 41, 79, 81, 26, 45, 56, 65, 86, 32),
Danceability = c(67, 42, 60, 51, 42, 78, 58, 83, 79, 76),
Loudness = c(-4, -7, -4, -5, -7, -6, -7, -3, -3, -7),
Liveness = c(8, 11, 13, 21, 13, 18, 14, 9, 8, 8),
Valence = c(80, 16, 30, 69, 33, 59, 14, 93, 59, 57),
Length = c(217, 285, 245, 230, 270, 282, 242, 234, 215, 189),
Acousticness = c(19, 31, 7, 0, 92, 47, 7, 58, 4, 84),
Speechiness = c(4, 3, 10, 5, 3, 3, 5, 8, 11, 5)
)
cosine_similarity <- function(x, y) {
dot_product <- sum(x * y)
magnitude_x <- sqrt(sum(x^2))
magnitude_y <- sqrt(sum(y^2))
similarity <- dot_product / (magnitude_x * magnitude_y)
return(similarity)
}
Songs <- function(Intrest, songs, top_n = 10) {
similarities <- apply(songs[, 6:ncol(songs)], 1, function(x) cosine_similarity(Intrest, x))
Songs_Interest <- songs[order(similarities, decreasing = TRUE), ][1:top_n, ]
return(Songs_Interest)
}
ui <- fluidPage(
titlePanel("Recommendations"),
sidebarLayout(
sidebarPanel(
sliderInput("bpm", "BPM:", min = 50, max = 200, value = 130),
sliderInput("energy", "Energy:", min = 0, max = 100, value = 85),
sliderInput("danceability", "Danceability:", min = 0, max = 100, value = 70),
sliderInput("loudness", "Loudness:", min = -20, max = 0, value = -5),
sliderInput("liveness", "Liveness:", min = 0, max = 100, value = 10),
sliderInput("valence", "Valence:", min = 0, max = 100, value = 75),
sliderInput("length", "Length:", min = 100, max = 400, value = 230),
sliderInput("acousticness", "Acousticness:", min = 0, max = 100, value = 15),
sliderInput("speechiness", "Speechiness:", min = 0, max = 100, value = 5),
actionButton("recommendBtn", "Recommend")
),
mainPanel(
dataTableOutput("recommendations")
)
)
)
library(dplyr)
library(Matrix)
library(shiny)
songs <- data.frame(
Popularity = c(83, 81, 80, 88, 86, 84, 84, 87, 86, 99),
Title = c("Hey, Soul Sister", "A Thousand Years", "Titanium (feat. Sia)", "Underneath the Tree", "All of Me", "Thinking out Loud", "The Hills", "Shape of You", "One Kiss (with Dua Lipa)", "Memories"),
Artist = c("Train", "Christina Perri", "David Guetta", "Kelly Clarkson", "John Legend", "Ed Sheeran", "The Weeknd", "Ed Sheeran", "Calvin Harris", "Maroon 5"),
Genre = c("neo mellow", "dance pop", "dance pop", "dance pop", "neo mellow", "pop", "canadian contemporary r&b", "pop", "dance pop", "pop"),
Year = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
BPM = c(97, 139, 126, 160, 120, 79, 113, 96, 124, 91),
Energy = c(89, 41, 79, 81, 26, 45, 56, 65, 86, 32),
Danceability = c(67, 42, 60, 51, 42, 78, 58, 83, 79, 76),
Loudness = c(-4, -7, -4, -5, -7, -6, -7, -3, -3, -7),
Liveness = c(8, 11, 13, 21, 13, 18, 14, 9, 8, 8),
Valence = c(80, 16, 30, 69, 33, 59, 14, 93, 59, 57),
Length = c(217, 285, 245, 230, 270, 282, 242, 234, 215, 189),
Acousticness = c(19, 31, 7, 0, 92, 47, 7, 58, 4, 84),
Speechiness = c(4, 3, 10, 5, 3, 3, 5, 8, 11, 5)
)
cosine_similarity <- function(x, y) {
dot_product <- sum(x * y)
magnitude_x <- sqrt(sum(x^2))
magnitude_y <- sqrt(sum(y^2))
similarity <- dot_product / (magnitude_x * magnitude_y)
return(similarity)
}
Songs <- function(Intrest, songs, top_n = 10) {
similarities <- apply(songs[, 6:ncol(songs)], 1, function(x) cosine_similarity(Intrest, x))
Songs_Interest <- songs[order(similarities, decreasing = TRUE), ][1:top_n, ]
return(Songs_Interest)
}
ui <- fluidPage(
titlePanel("Recommendations"),
sidebarLayout(
sidebarPanel(
sliderInput("bpm", "BPM:", min = 50, max = 200, value = 130),
sliderInput("energy", "Energy:", min = 0, max = 100, value = 85),
sliderInput("danceability", "Danceability:", min = 0, max = 100, value = 70),
sliderInput("loudness", "Loudness:", min = -20, max = 0, value = -5),
sliderInput("liveness", "Liveness:", min = 0, max = 100, value = 10),
sliderInput("valence", "Valence:", min = 0, max = 100, value = 75),
sliderInput("length", "Length:", min = 100, max = 400, value = 230),
sliderInput("acousticness", "Acousticness:", min = 0, max = 100, value = 15),
sliderInput("speechiness", "Speechiness:", min = 0, max = 100, value = 5),
actionButton("recommendBtn", "Recommend")
),
mainPanel(
dataTableOutput("recommendations")
)
)
)
server <- function(input, output) {
observeEvent(input$recommendBtn, {
Intrest <- c(input$bpm, input$energy, input$danceability, input$loudness, input$liveness, input$valence, input$length, input$acousticness, input$speechiness)
Songs_Interest <- Songs(Intrest, songs)
output$recommendations <- renderDataTable({
Songs_Interest[, c("Popularity", "Title", "Artist", "Genre", "Year")]
})
})
}
shinyApp(ui = ui, server = server)
shiny::shiny_document
library(dplyr)
library(Matrix)
library(shiny)
songs <- data.frame(
Popularity = c(83, 81, 80, 88, 86, 84, 84, 87, 86, 99),
Title = c("Hey, Soul Sister", "A Thousand Years", "Titanium (feat. Sia)", "Underneath the Tree", "All of Me", "Thinking out Loud", "The Hills", "Shape of You", "One Kiss (with Dua Lipa)", "Memories"),
Artist = c("Train", "Christina Perri", "David Guetta", "Kelly Clarkson", "John Legend", "Ed Sheeran", "The Weeknd", "Ed Sheeran", "Calvin Harris", "Maroon 5"),
Genre = c("neo mellow", "dance pop", "dance pop", "dance pop", "neo mellow", "pop", "canadian contemporary r&b", "pop", "dance pop", "pop"),
Year = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
BPM = c(97, 139, 126, 160, 120, 79, 113, 96, 124, 91),
Energy = c(89, 41, 79, 81, 26, 45, 56, 65, 86, 32),
Danceability = c(67, 42, 60, 51, 42, 78, 58, 83, 79, 76),
Loudness = c(-4, -7, -4, -5, -7, -6, -7, -3, -3, -7),
Liveness = c(8, 11, 13, 21, 13, 18, 14, 9, 8, 8),
Valence = c(80, 16, 30, 69, 33, 59, 14, 93, 59, 57),
Length = c(217, 285, 245, 230, 270, 282, 242, 234, 215, 189),
Acousticness = c(19, 31, 7, 0, 92, 47, 7, 58, 4, 84),
Speechiness = c(4, 3, 10, 5, 3, 3, 5, 8, 11, 5)
)
cosine_similarity <- function(x, y) {
dot_product <- sum(x * y)
magnitude_x <- sqrt(sum(x^2))
magnitude_y <- sqrt(sum(y^2))
similarity <- dot_product / (magnitude_x * magnitude_y)
return(similarity)
}
Songs <- function(Intrest, songs, top_n = 10) {
similarities <- apply(songs[, 6:ncol(songs)], 1, function(x) cosine_similarity(Intrest, x))
Songs_Interest <- songs[order(similarities, decreasing = TRUE), ][1:top_n, ]
return(Songs_Interest)
}
ui <- fluidPage(
titlePanel("Recommendations"),
sidebarLayout(
sidebarPanel(
sliderInput("bpm", "BPM:", min = 50, max = 200, value = 130),
sliderInput("energy", "Energy:", min = 0, max = 100, value = 85),
sliderInput("danceability", "Danceability:", min = 0, max = 100, value = 70),
sliderInput("loudness", "Loudness:", min = -20, max = 0, value = -5),
sliderInput("liveness", "Liveness:", min = 0, max = 100, value = 10),
sliderInput("valence", "Valence:", min = 0, max = 100, value = 75),
sliderInput("length", "Length:", min = 100, max = 400, value = 230),
sliderInput("acousticness", "Acousticness:", min = 0, max = 100, value = 15),
sliderInput("speechiness", "Speechiness:", min = 0, max = 100, value = 5),
actionButton("recommendBtn", "Recommend")
),
mainPanel(
dataTableOutput("recommendations")
)
)
)
server <- function(input, output) {
observeEvent(input$recommendBtn, {
Intrest <- c(input$bpm, input$energy, input$danceability, input$loudness, input$liveness, input$valence, input$length, input$acousticness, input$speechiness)
Songs_Interest <- Songs(Intrest, songs)
output$recommendations <- renderDataTable({
Songs_Interest[, c("Popularity", "Title", "Artist", "Genre", "Year")]
})
})
}
shinyApp(ui = ui, server = server)
library(dplyr)
library(Matrix)
library(shiny)
songs <- data.frame(
Popularity = c(83, 81, 80, 88, 86, 84, 84, 87, 86, 99),
Title = c("Hey, Soul Sister", "A Thousand Years", "Titanium (feat. Sia)", "Underneath the Tree", "All of Me", "Thinking out Loud", "The Hills", "Shape of You", "One Kiss (with Dua Lipa)", "Memories"),
Artist = c("Train", "Christina Perri", "David Guetta", "Kelly Clarkson", "John Legend", "Ed Sheeran", "The Weeknd", "Ed Sheeran", "Calvin Harris", "Maroon 5"),
Genre = c("neo mellow", "dance pop", "dance pop", "dance pop", "neo mellow", "pop", "canadian contemporary r&b", "pop", "dance pop", "pop"),
Year = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
BPM = c(97, 139, 126, 160, 120, 79, 113, 96, 124, 91),
Energy = c(89, 41, 79, 81, 26, 45, 56, 65, 86, 32),
Danceability = c(67, 42, 60, 51, 42, 78, 58, 83, 79, 76),
Loudness = c(-4, -7, -4, -5, -7, -6, -7, -3, -3, -7),
Liveness = c(8, 11, 13, 21, 13, 18, 14, 9, 8, 8),
Valence = c(80, 16, 30, 69, 33, 59, 14, 93, 59, 57),
Length = c(217, 285, 245, 230, 270, 282, 242, 234, 215, 189),
Acousticness = c(19, 31, 7, 0, 92, 47, 7, 58, 4, 84),
Speechiness = c(4, 3, 10, 5, 3, 3, 5, 8, 11, 5)
)
cosine_similarity <- function(x, y) {
dot_product <- sum(x * y)
magnitude_x <- sqrt(sum(x^2))
magnitude_y <- sqrt(sum(y^2))
similarity <- dot_product / (magnitude_x * magnitude_y)
return(similarity)
}
Songs <- function(Intrest, songs, top_n = 10) {
similarities <- apply(songs[, 6:ncol(songs)], 1, function(x) cosine_similarity(Intrest, x))
Songs_Interest <- songs[order(similarities, decreasing = TRUE), ][1:top_n, ]
return(Songs_Interest)
}
ui <- fluidPage(
titlePanel("Recommendations"),
sidebarLayout(
sidebarPanel(
sliderInput("bpm", "BPM:", min = 50, max = 200, value = 130),
sliderInput("energy", "Energy:", min = 0, max = 100, value = 85),
sliderInput("danceability", "Danceability:", min = 0, max = 100, value = 70),
sliderInput("loudness", "Loudness:", min = -20, max = 0, value = -5),
sliderInput("liveness", "Liveness:", min = 0, max = 100, value = 10),
sliderInput("valence", "Valence:", min = 0, max = 100, value = 75),
sliderInput("length", "Length:", min = 100, max = 400, value = 230),
sliderInput("acousticness", "Acousticness:", min = 0, max = 100, value = 15),
sliderInput("speechiness", "Speechiness:", min = 0, max = 100, value = 5),
actionButton("recommendBtn", "Recommend")
),
mainPanel(
dataTableOutput("recommendations")
)
)
)
server <- function(input, output) {
observeEvent(input$recommendBtn, {
Intrest <- c(input$bpm, input$energy, input$danceability, input$loudness, input$liveness, input$valence, input$length, input$acousticness, input$speechiness)
Songs_Interest <- Songs(Intrest, songs)
output$recommendations <- renderDataTable({
Songs_Interest[, c("Popularity", "Title", "Artist", "Genre", "Year")]
})
})
}
shinyApp(ui = ui, server = server)
library(dplyr)
library(Matrix)
library(shiny)
songs <- data.frame(
Popularity = c(83, 81, 80, 88, 86, 84, 84, 87, 86, 99),
Title = c("Hey, Soul Sister", "A Thousand Years", "Titanium (feat. Sia)", "Underneath the Tree", "All of Me", "Thinking out Loud", "The Hills", "Shape of You", "One Kiss (with Dua Lipa)", "Memories"),
Artist = c("Train", "Christina Perri", "David Guetta", "Kelly Clarkson", "John Legend", "Ed Sheeran", "The Weeknd", "Ed Sheeran", "Calvin Harris", "Maroon 5"),
Genre = c("neo mellow", "dance pop", "dance pop", "dance pop", "neo mellow", "pop", "canadian contemporary r&b", "pop", "dance pop", "pop"),
Year = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
BPM = c(97, 139, 126, 160, 120, 79, 113, 96, 124, 91),
Energy = c(89, 41, 79, 81, 26, 45, 56, 65, 86, 32),
Danceability = c(67, 42, 60, 51, 42, 78, 58, 83, 79, 76),
Loudness = c(-4, -7, -4, -5, -7, -6, -7, -3, -3, -7),
Liveness = c(8, 11, 13, 21, 13, 18, 14, 9, 8, 8),
Valence = c(80, 16, 30, 69, 33, 59, 14, 93, 59, 57),
Length = c(217, 285, 245, 230, 270, 282, 242, 234, 215, 189),
Acousticness = c(19, 31, 7, 0, 92, 47, 7, 58, 4, 84),
Speechiness = c(4, 3, 10, 5, 3, 3, 5, 8, 11, 5)
)
cosine_similarity <- function(x, y) {
dot_product <- sum(x * y)
magnitude_x <- sqrt(sum(x^2))
magnitude_y <- sqrt(sum(y^2))
similarity <- dot_product / (magnitude_x * magnitude_y)
return(similarity)
}
Songs <- function(Intrest, songs, top_n = 10) {
similarities <- apply(songs[, 6:ncol(songs)], 1, function(x) cosine_similarity(Intrest, x))
Songs_Interest <- songs[order(similarities, decreasing = TRUE), ][1:top_n, ]
return(Songs_Interest)
}
ui <- fluidPage(
titlePanel("Recommendations"),
sidebarLayout(
sidebarPanel(
sliderInput("bpm", "BPM:", min = 50, max = 200, value = 130),
sliderInput("energy", "Energy:", min = 0, max = 100, value = 85),
sliderInput("danceability", "Danceability:", min = 0, max = 100, value = 70),
sliderInput("loudness", "Loudness:", min = -20, max = 0, value = -5),
sliderInput("liveness", "Liveness:", min = 0, max = 100, value = 10),
sliderInput("valence", "Valence:", min = 0, max = 100, value = 75),
sliderInput("length", "Length:", min = 100, max = 400, value = 230),
sliderInput("acousticness", "Acousticness:", min = 0, max = 100, value = 15),
sliderInput("speechiness", "Speechiness:", min = 0, max = 100, value = 5),
actionButton("recommendBtn", "Recommend")
),
mainPanel(
dataTableOutput("recommendations")
)
)
)
server <- function(input, output) {
observeEvent(input$recommendBtn, {
Intrest <- c(input$bpm, input$energy, input$danceability, input$loudness, input$liveness, input$valence, input$length, input$acousticness, input$speechiness)
Songs_Interest <- Songs(Intrest, songs)
output$recommendations <- renderDataTable({
Songs_Interest[, c("Title", "Artist", "Genre")]
})
})
}
shinyApp(ui = ui, server = server)
library(dplyr)
library(Matrix)
library(shiny)
songs <- data.frame(
Popularity = c(83, 81, 80, 88, 86, 84, 84, 87, 86, 99),
Title = c("Hey, Soul Sister", "A Thousand Years", "Titanium (feat. Sia)", "Underneath the Tree", "All of Me", "Thinking out Loud", "The Hills", "Shape of You", "One Kiss (with Dua Lipa)", "Memories"),
Artist = c("Train", "Christina Perri", "David Guetta", "Kelly Clarkson", "John Legend", "Ed Sheeran", "The Weeknd", "Ed Sheeran", "Calvin Harris", "Maroon 5"),
Genre = c("neo mellow", "dance pop", "dance pop", "dance pop", "neo mellow", "pop", "canadian contemporary r&b", "pop", "dance pop", "pop"),
Year = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
BPM = c(97, 139, 126, 160, 120, 79, 113, 96, 124, 91),
Energy = c(89, 41, 79, 81, 26, 45, 56, 65, 86, 32),
Danceability = c(67, 42, 60, 51, 42, 78, 58, 83, 79, 76),
Loudness = c(-4, -7, -4, -5, -7, -6, -7, -3, -3, -7),
Liveness = c(8, 11, 13, 21, 13, 18, 14, 9, 8, 8),
Valence = c(80, 16, 30, 69, 33, 59, 14, 93, 59, 57),
Length = c(217, 285, 245, 230, 270, 282, 242, 234, 215, 189),
Acousticness = c(19, 31, 7, 0, 92, 47, 7, 58, 4, 84),
Speechiness = c(4, 3, 10, 5, 3, 3, 5, 8, 11, 5)
)
cosine_similarity <- function(x, y) {
dot_product <- sum(x * y)
magnitude_x <- sqrt(sum(x^2))
magnitude_y <- sqrt(sum(y^2))
similarity <- dot_product / (magnitude_x * magnitude_y)
return(similarity)
}
Songs <- function(Intrest, songs, top_n = 10) {
similarities <- apply(songs[, 6:ncol(songs)], 1, function(x) cosine_similarity(Intrest, x))
Songs_Interest <- songs[order(similarities, decreasing = TRUE), ][1:top_n, ]
return(Songs_Interest)
}
ui <- fluidPage(
titlePanel("Recommendations"),
sidebarLayout(
sidebarPanel(
sliderInput("bpm", "BPM:", min = 50, max = 200, value = 130),
sliderInput("energy", "Energy:", min = 0, max = 100, value = 85),
sliderInput("danceability", "Danceability:", min = 0, max = 100, value = 70),
sliderInput("loudness", "Loudness:", min = -20, max = 0, value = -5),
sliderInput("liveness", "Liveness:", min = 0, max = 100, value = 10),
sliderInput("valence", "Valence:", min = 0, max = 100, value = 75),
sliderInput("length", "Length:", min = 100, max = 400, value = 230),
sliderInput("acousticness", "Acousticness:", min = 0, max = 100, value = 15),
sliderInput("speechiness", "Speechiness:", min = 0, max = 100, value = 5),
actionButton("recommendBtn", "Recommend")
),
mainPanel(
dataTableOutput("recommendations")
)
)
)
server <- function(input, output) {
observeEvent(input$recommendBtn, {
Intrest <- c(input$bpm, input$energy, input$danceability, input$loudness, input$liveness, input$valence, input$length, input$acousticness, input$speechiness)
Songs_Interest <- Songs(Intrest, songs)
output$recommendations <- renderDataTable({
Songs_Interest[, c("Title", "Artist", "Genre")]
})
})
}
shinyApp(ui = ui, server = server)
spotify <- read.csv("D:/Data Analytics/Sem 1/STAT 515/Final Project/updated_dataset.csv")
calculate_and_plot(spotify$Acousticness, spotify$Energy, "Acousticness", "Energy")
spotify <- read.csv("D:/Data Analytics/Sem 1/STAT 515/Final Project/updated_dataset.csv")
calculate_and_plot(spotify$Acousticness, spotify$Energy, "Acousticness", "Energy")
ggplot(data = spotify, aes(x = x, y = y)) +
geom_point(alpha = 0.5) +
labs(title = paste("Scatter plot of", x_label, "vs.", y_label),
x = x_label, y = y_label)
